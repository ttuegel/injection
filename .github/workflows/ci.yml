name: CI

# Trigger the workflow on push or pull request, but only for the main branch
on:
  pull_request:
  push:
    branches: [main]

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        cabal: ["3.2"]
        ghc:
          - "8.10.2"

    steps:
    - name: Check out code
      uses: actions/checkout@v2.3.3
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/main'

    - name: Setup Haskell
      uses: actions/setup-haskell@v1.1.3
      id: setup-haskell-cabal
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Freeze
      run: |
        cabal v2-freeze

    - name: Cache ~/.cabal/store
      uses: actions/cache@v2.1.2
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

    - name: Build
      run: |
        cabal v2-configure --enable-tests --enable-benchmarks --test-show-details=direct
        cabal v2-build all

    - name: Test
      run: |
        cabal v2-test all

  stack:
    name: stack / ghc ${{ matrix.ghc }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack: ["2.5.1"]
        ghc:
          - "8.10.2"

    steps:
    - name: Check out code
      uses: actions/checkout@v2.3.3
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/main'

    - name: Setup Haskell Stack
      uses: actions/setup-haskell@v1.1.3
      with:
        ghc-version: ${{ matrix.ghc }}
        stack-version: ${{ matrix.stack }}

    - uses: actions/cache@v2.1.2
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.ghc }}-stack

    - name: Build
      run: |
        stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks --ghc-options=-Werror

    - name: Test
      run: |
        stack test --system-ghc

  nix:
    name: Nix
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2.3.3

    - name: Install Nix
      uses: cachix/install-nix-action@v12
      with:
        extra_nix_config: |
          substituters = http://cache.nixos.org https://hydra.iohk.io
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=

    - name: Build
      run: nix-build -A injection.components.library

    - name: Test
      run: nix-build -A injection.checks
